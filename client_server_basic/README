client and server must agree on a protocol
    1. server proposes a buffer_size. (for this assignment servers buffer_size is immidiately accepted)
    2. client sends a random key (done manually for now) to the server and wants that back when server is finished sending the messages.
        this is the second validation of server is done setting messages.
    3. server sends its stack size, client keeps on getting messages and increments its stack counter until it matches the servers stack size.
        first validation of server is done when client reaches the same stack size of server. If stack size is 0 its indication of an error.

server's task:
    1. accepts a command from the client, executes it. Server will add to its stack each message of size buffer_size. 
    2. server sends its stack size to the client, indicating its going to start setting the messages.
    3. once server stack is empty, it sends back the key, indicating it has completed its task.
    4. for the next promt


