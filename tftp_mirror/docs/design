1. create a simple queue, test on large files
2. test for UDP, implement stop and wait
3. impelent syn and ack 

udp on default will listen on port 4200
when client sends a request for the packet size, the server sends {1:file_size},{3:port_number}
protocol:
    both client and server first send each other the size of the given data
        syntax: {0:data}    
    client requests file size 
        syntax: {1:file_name}   // returns file size
    requesting offset
        syntax: {2:file_name:i,n} // filename with offset
requst from client:
    if msg[0] is '{':
        switch msg[1]
            case 0:
                from msg[2] unitl reached '}' get data
            case 1:
                from msg[2] until eached '}' get data, inc counter
                if counter != 0:data_size: perror()
            case 2:
                from msg[2] until ':' get file_name
                    if(file_name != exist): perror()
                from ':' to ',' get offset
                from ',' to '}' get bytes to read
                if counter != data_size: perror()

send to client:
    {2:file_size}   // same clients request
    {3:4200}        // port to listen on
    {2:file_name:i,n:string}  // sends the filename with its offset followed by the actual data to the client
